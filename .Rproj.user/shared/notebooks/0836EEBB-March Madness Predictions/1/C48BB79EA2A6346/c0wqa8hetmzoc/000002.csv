"0","library(tidyverse)"
"2","package ‘tidyverse’ was built under R version 4.0.4"
"2","Registered S3 methods overwritten by 'dbplyr':
  method         from
  print.tbl_lazy     
  print.tbl_sql      
"
"2","[30m-- [1mAttaching packages[22m ---------------------------------------------------------------------- tidyverse 1.3.0 --[39m
"
"2","[30m[32mv[30m [34mggplot2[30m 3.3.3     [32mv[30m [34mpurrr  [30m 0.3.4
[32mv[30m [34mtibble [30m 3.0.4     [32mv[30m [34mdplyr  [30m 1.0.5
[32mv[30m [34mtidyr  [30m 1.1.3     [32mv[30m [34mstringr[30m 1.4.0
[32mv[30m [34mreadr  [30m 1.4.0     [32mv[30m [34mforcats[30m 0.5.1[39m
"
"2","package ‘ggplot2’ was built under R version 4.0.4"
"2","package ‘tidyr’ was built under R version 4.0.4"
"2","package ‘readr’ was built under R version 4.0.4"
"2","package ‘dplyr’ was built under R version 4.0.4"
"2","package ‘forcats’ was built under R version 4.0.4"
"2","[30m-- [1mConflicts[22m ------------------------------------------------------------------------- tidyverse_conflicts() --
[31mx[30m [34mdplyr[30m::[32mfilter()[30m masks [34mstats[30m::filter()
[31mx[30m [34mdplyr[30m::[32mlag()[30m    masks [34mstats[30m::lag()[39m
"
"0","library(readxl)"
"0","library(shiny)"
"2","package ‘shiny’ was built under R version 4.0.4"
"0","import1 <- read_csv('2021_sports_reference.csv') %>%"
"0","  mutate(conference = paste(W_conf, ""-"", L_conf)) %>%"
"0","  mutate(record = paste(Wins, ""-"", Losses)) %>%"
"0","  mutate(home = paste(W_home, ""-"", L_home)) %>%"
"0","  mutate(away = paste(W_away, ""-"", L_away)) %>%"
"0","  mutate(school = tolower(School_trim)) %>%"
"0","  mutate(`3pg` = `3P`/Games) %>%"
"0","  mutate(FTpg = round(FT/Games)) %>%"
"0","  mutate(OREBpg = round(ORB/Games)) %>%"
"0","  mutate(REBpg = round(TRB/Games)) %>%"
"0","  mutate(ASTpg = round(AST/Games)) %>%"
"0","  mutate(STLpg = round(STL/Games)) %>%"
"0","  mutate(BLKpg = round(BLK/Games))"
"2","
[36m--[39m [1m[1mColumn specification[1m[22m [36m---------------------------------------------------------------------------------------[39m
cols(
  .default = col_double(),
  School_trim = [31mcol_character()[39m,
  `68.77670191` = [33mcol_logical()[39m
)
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m for the full column specifications.

"
"0","stats <- import1 %>%"
"0","  select(school, record, SimpleRatingSystem, StrengthOfSchedule, "
"0","         home, away, conference, Points_made, 'FG%', FGA, FTA, 'FT%', ORB, TOV, OER, DER, PosPG) %>%"
"0","  arrange(school)"
"0",""
"0","import2 <- read_excel('ncaa basketball 2020-21.xlsx', sheet = 'Sheet1') %>%"
"0","  mutate(school = tolower(Team)) "
"0","import2$school <- gsub(""washingtonu"", ""washington"", import2$school)"
"0","import2$school <- gsub(""norfolkst"", ""norfolkstate"", import2$school)"
"0","import2$school <- gsub(""appalachianst"", ""appalachianstate"", import2$school)"
"0","import2$school <- gsub(""calsantabarbara"", ""uc-santabarbara"", import2$school)"
"0","import2$school <- gsub(""calsantabarb"", ""uc-santabarbara"", import2$school)"
"0","import2$school <- gsub(""usc"", ""southerncalifornia"", import2$school)"
"0","import2$school <- gsub(""e.washington"", ""easternwashington"", import2$school)"
"0","import2$school <- gsub(""vacommonwealth"", ""virginiacommonwealth"", import2$school)"
"0","import2$school <- gsub(""loyolachicago"", ""loyola(il)"", import2$school)"
"0","import2$school <- gsub(""houstonu"", ""houston"", import2$school)"
"0","import2$school <- gsub(""mountstmarys"", ""mountst.mary's"", import2$school)"
"0","import2$school <- gsub(""lsu"", ""louisianastate"", import2$school)"
"0","import2$school <- gsub(""ncgreensboro"", ""northcarolina-greensboro"", import2$school)"
"0","import2$school <- gsub(""byu"", ""brighamyoung"", import2$school)"
"0",""
"0","lookup1 <- import2 %>%"
"0","  select(school, Final, Rot, Date) %>%"
"0","  mutate(opponent_rot = ifelse(Rot %% 2 == 0, Rot - 1, Rot + 1) ) %>%"
"0","  mutate(game_date = paste(ifelse(sapply(Date,nchar)==3,'2021','2020'),Date, sep = '-'))"
"0","lookup2 <- import2 %>%"
"0","  mutate(opponent_rot = Rot) %>% "
"0","  mutate(opponent_school = school) %>%"
"0","  mutate(opponent_final = Final) %>%"
"0","  select(opponent_rot, opponent_school, Date, opponent_final) %>%"
"0","  mutate(game_date = paste(ifelse(sapply(Date,nchar)==3,'2021','2020'),Date, sep = '-'))"
"0","games <- merge(lookup1, lookup2) %>%"
"0","  select(game_date, school, Final, opponent_school, opponent_final) %>%"
"0","  mutate(win_or_loss = ifelse(Final > opponent_final, 'W', 'L'))"
"0","rm(import1, import2, lookup1, lookup2)"
"0",""
"0",""
"0","# matchup"
"0","compare <- function(team1, team2){"
"0","  team1_stats <- stats %>%"
"0","    filter(school == team1)"
"0","  team2_stats <- stats %>%"
"0","    filter(school == team2)"
"0","  x <- rbind(team1_stats, team2_stats)"
"0","  x"
"0","  team1oer <- seasonStats[which(seasonStats$School_trim == 'Florida'), 'OER']"
"0","  team1der <- seasonStats['School_trim'==team1,'DER']"
"0","  team1pospg <- seasonStats['School_trim'==team1,'PosPG']"
"0","  team2oer <- seasonStats['School_trim'==team2,'OER']"
"0","  team2der <- seasonStats['School_trim'==team2,'DER']"
"0","  team2pospg <- seasonStats['School_trim'==team2,'PosPG']"
"0","  gamePace <- ((team1pospg*team2pospg)/68.8)"
"0","  team1PPP <- team1oer*team2der/100"
"0","  team2PPP <- team2oer*team1der/100"
"0","  team1score <- team1PPP*gamePace/100"
"0","  team2score <- team2PPP*gamePace/100"
"0","  cat(""Team 1 projected score: "", team1score)"
"0","  cat(""Team 2 projected score: "", team2score)"
"0","}"
"0",""
"0","# games"
"0","matchup <- function(team1, team2){"
"0","  matchups <- games %>%"
"0","    filter(school == team1, opponent_school == team2) %>%"
"0","    select(game_date, school, Final, opponent_final, opponent_school, win_or_loss)"
"0","  matchups"
"0","}"
"0",""
"0","# last ten matches"
"0","games_last_ten <- function(team) {"
"0","  x <- games %>%"
"0","    filter(game_date > '2020-1231') %>%"
"0","    filter(school == team) %>%"
"0","    arrange(desc(game_date)) %>%"
"0","    top_n(10,game_date)   # slice(1:10) also works"
"0","}"
